<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Smartcoin_Payload" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Target server - 10.91.20.44" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="targetServer" elementType="Argument">
            <stringProp name="Argument.name">targetServer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">10.91.20.49</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="service" elementType="Argument">
            <stringProp name="Argument.name">service</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">partner-origination-processor</stringProp>
          </elementProp>
          <elementProp name="originatorId" elementType="Argument">
            <stringProp name="Argument.name">originatorId</stringProp>
            <stringProp name="Argument.value">U67110KA2015PTC084272</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token" elementType="Argument">
            <stringProp name="Argument.name">token</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerId" elementType="Argument">
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.name">customerId</stringProp>
          </elementProp>
          <elementProp name="accNumber" elementType="Argument">
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.name">accNumber</stringProp>
          </elementProp>
          <elementProp name="fName" elementType="Argument">
            <stringProp name="Argument.name">fName</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Target server - nimbus-services" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="targetServer" elementType="Argument">
            <stringProp name="Argument.name">targetServer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">10.91.20.49</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="service" elementType="Argument">
            <stringProp name="Argument.name">service</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">nimbus-services</stringProp>
          </elementProp>
          <elementProp name="originatorId" elementType="Argument">
            <stringProp name="Argument.name">originatorId</stringProp>
            <stringProp name="Argument.value">U67110KA2015PTC084272</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token" elementType="Argument">
            <stringProp name="Argument.name">token</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerId" elementType="Argument">
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.name">customerId</stringProp>
          </elementProp>
          <elementProp name="accNumber" elementType="Argument">
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.name">accNumber</stringProp>
          </elementProp>
          <elementProp name="fName" elementType="Argument">
            <stringProp name="Argument.name">fName</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${targetServer}</stringProp>
        <stringProp name="HTTPSampler.port">${port}</stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">180000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">300000</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_44_49" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">*/*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${token}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">API-KEY</stringProp>
            <stringProp name="Header.value">8ce730c05b49db7292f6e7a460c1d5f304d88d6155d2b2aceab4b13bd6dfc196</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">GROUP-KEY</stringProp>
            <stringProp name="Header.value">NPOS_DEV</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_UAT" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">*/*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${token}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">API-KEY</stringProp>
            <stringProp name="Header.value">35b29b7be9e656d24d20a55eefc239816ed3cd565d58ac3ed5a699239d3c1080</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">GROUP-KEY</stringProp>
            <stringProp name="Header.value">NPOS_UAT</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_13" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">*/*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${token}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">API-KEY</stringProp>
            <stringProp name="Header.value">3583a1d2d44cc80e1b1f3b418a9daed4ea485f90380afe13402729b00c2ae975</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">GROUP-KEY</stringProp>
            <stringProp name="Header.value">NPOS_QA</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Smart Coin-Sample" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">${__groovy((vars.get(&apos;counter&apos;) as int)%100 == 1 )}</stringProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AuthTokenGenerate - ${counter}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">c.satheesh@NorthernArc.com</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Welcome@123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sts.northernarc.com</stringProp>
            <stringProp name="HTTPSampler.path">/adfs/oauth2/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic NDUzMmU1NTgtNmMwYi00ZmRhLWFjNjYtMDVjMzE2OTEwNzI2Og==</stringProp>
                </elementProp>
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sts.northernarc.com</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="access_token Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">access_token</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;access_token&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">Error</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;token&quot;, &quot;Bearer &quot;+vars.get(&quot;access_token&quot;));</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.49/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.49/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.49/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.49/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;${next30Date}&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;${todayDate}&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;${appID}&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;YFSPC9617R&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;${lName}&quot;,&#xd;
      &quot;first_name&quot;: &quot;${fName}&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;${mobile}&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/initiateSanction/json?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction copy 13 links" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;${next30Date}&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;${todayDate}&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;${appID}&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;${pan}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;${lName}&quot;,&#xd;
      &quot;first_name&quot;: &quot;${fName}&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;${mobile}&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/initiateSanction/json/v2?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction -pan" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;${next30Date}&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;${todayDate}&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;${appID}&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;UPVPN1681A&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;${lName}&quot;,&#xd;
      &quot;first_name&quot;: &quot;${fName}&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;${mobile}&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/initiateSanction/json/v2?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;16176297509773&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;blfesh&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;2024-11-23&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;2024-10-24&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;S06125M&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80CIRPS2294L&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80CIRPS2294L&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;CIRPS2294L&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;tpopo&quot;,&#xd;
      &quot;first_name&quot;: &quot;blfesh&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;9851954194&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/initiateSanction/json?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">9</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sanction Status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/status?originatorId=${originatorId}&amp;creditHubId=${customerId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="SanctionStatus" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">ERROR</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="SanctionReferenceId Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- response" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="174130302">REJECTED</stringProp>
                <stringProp name="-809373649">Exception</stringProp>
                <stringProp name="2096857181">Failed</stringProp>
                <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
                <stringProp name="66247144">ERROR</stringProp>
                <stringProp name="-1873833668">MISSING VALUES</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Sanction" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
 	&quot;dateOfBirth&quot;: &quot;2000-08-04&quot;&#xd;
 }&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/update/sanctionJSON?creditHubId=${customerId}&amp;originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="Connection" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Sanction Status Loop Controller - 2" enabled="true">
          <stringProp name="LoopController.loops">6</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sanction Status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/status?originatorId=${originatorId}&amp;creditHubId=${customerId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Sanction Reference ID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">ERROR</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="sanctionReferenceId Extractor" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">sanctionReferenceId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;sanctionReferenceId&quot; :    </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">Error</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disbursement Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;bank_branch&quot;: &quot;MUMBAI BOMBAY&quot;,&#xd;
  &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
  &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
  &quot;bank_ifsc&quot;: &quot;PUNB0121220&quot;,&#xd;
  &quot;documents&quot;: [&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;bank_name&quot;: &quot;PNB&quot;,&#xd;
  &quot;customerId&quot;:${customerId},&#xd;
  &quot;ac_type&quot;: &quot;SAVINGS&quot;,&#xd;
  &quot;originatorId&quot;: &quot;U67110KA2015PTC084272&quot;,&#xd;
  &quot;annualPercentageRatio&quot;: 38.33&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/disbursement/request</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="disbursementReferenceId Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">disbursementReferenceId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.disbursementReferenceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Sanction Status Loop Controller - 1" enabled="true">
          <stringProp name="LoopController.loops">7</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sanction Status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/status?originatorId=${originatorId}&amp;creditHubId=${customerId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="sanctionReferenceId Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Disbursement Status - Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">20</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disbursement Status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/${service}/api/partner-origination/nimbus/disbursementStatus?originatorId=${originatorId}&amp;disbursementReferenceId=${disbursementReferenceId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">1000.0</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Smart Coin-nimbus services" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">3</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">${__groovy((vars.get(&apos;counter&apos;) as int)%100 == 1 )}</stringProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AuthTokenGenerate - ${counter}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">c.satheesh@NorthernArc.com</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Welcome@123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sts.northernarc.com</stringProp>
            <stringProp name="HTTPSampler.path">/adfs/oauth2/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic NDUzMmU1NTgtNmMwYi00ZmRhLWFjNjYtMDVjMzE2OTEwNzI2Og==</stringProp>
                </elementProp>
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sts.northernarc.com</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="access_token Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">access_token</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;access_token&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">Error</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;token&quot;, &quot;Bearer &quot;+vars.get(&quot;access_token&quot;));</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.49/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.49/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.49/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.49/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;${next30Date}&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;${todayDate}&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;${appID}&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;${pan}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;${lName}&quot;,&#xd;
      &quot;first_name&quot;: &quot;${fName}&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;${mobile}&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/po/uploadSanctionJSON?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction copy 13 links" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;${next30Date}&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;${todayDate}&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;${appID}&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80${pan}&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;${pan}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;${lName}&quot;,&#xd;
      &quot;first_name&quot;: &quot;${fName}&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;${mobile}&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/po/uploadSanctionJSON?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Sanction copy-repeat" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;income_details&quot;: {&#xd;
    &quot;monthly_incomes&quot;: [&#xd;
      {&#xd;
        &quot;salary_amount&quot;: 35500&#xd;
      }&#xd;
    ],&#xd;
    &quot;gross_annual_income&quot;: 426000&#xd;
  },&#xd;
  &quot;poa&quot;: &quot;AADHAAR&quot;,&#xd;
   &quot;documents&quot;: [&#xd;
   {&#xd;
      &quot;content_type&quot;: &quot;XML&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.13/download/aadhaar.xml&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;AADHAR_XML&quot;&#xd;
    },&#xd;
     {&#xd;
            &quot;content_type&quot;: &quot;JPEG&quot;,&#xd;
            &quot;links&quot;: [&#xd;
                &quot;http://10.91.20.13/download/selfie_5.jpg&quot;&#xd;
            ],&#xd;
            &quot;tag&quot;: &quot;SELFIE&quot;&#xd;
        },&#xd;
         {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.13/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.13/download/selfie_5.jpg.png&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  &#xd;
  ],&#xd;
  &quot;riskCategory&quot;: &quot;LOW&quot;,&#xd;
  &quot;occupation_details&quot;: {&#xd;
    &quot;occupation_type&quot;: &quot;SALARIED&quot;,&#xd;
    &quot;salary_mode&quot;: &quot;Cash&quot;,&#xd;
    &quot;employer_name&quot;: &quot;Dxc Technology India Private Limited&quot;&#xd;
  },&#xd;
  &quot;repayment_capacity&quot;: {&#xd;
    &quot;foir&quot;: 0.6,&#xd;
    &quot;emi_to_net_income_ratio&quot;: 0&#xd;
  },&#xd;
  &quot;loan_details&quot;: {&#xd;
    &quot;disbursement_mode&quot;: &quot;IMPS&quot;,&#xd;
    &quot;product&quot;: &quot;SMMON12M&quot;,&#xd;
    &quot;total_processing_fee&quot;: 2065.0,&#xd;
    &quot;first_installment_date&quot;: &quot;2025-01-01&quot;,&#xd;
    &quot;cycle&quot;: 1,&#xd;
    &quot;disbursal_account&quot;: {&#xd;
      &quot;bank_branch&quot;: &quot;GUNTUR&quot;,&#xd;
      &quot;account_number&quot;: &quot;12798040003863&quot;,&#xd;
      &quot;ac_holder_name&quot;: &quot;dkxesh&quot;,&#xd;
      &quot;bank_ifsc&quot;: &quot;SBIN0005641&quot;,&#xd;
      &quot;bank_name&quot;: &quot;SBI&quot;,&#xd;
      &quot;ac_type&quot;: &quot;SAVINGS&quot;&#xd;
    },&#xd;
    &quot;requested_loan_amount&quot;: 30000,&#xd;
    &quot;purpose1&quot;: &quot;SYSTEM_GENERATED_LOAN_PURPOSE&quot;,&#xd;
    &quot;emi_amount&quot;: 6352,&#xd;
    &quot;repayment_frequency&quot;: &quot;MONTHLY&quot;,&#xd;
    &quot;sanctioned_loan_amount&quot;: 30000,&#xd;
    &quot;available_credit_limit&quot;: 100000,&#xd;
    &quot;schedule_start_date&quot;: &quot;2024-10-03&quot;,&#xd;
    &quot;interest_rate&quot;: 29.88,&#xd;
    &quot;scheduled_disbursement_date&quot;:&quot;2024-09-03&quot;,&#xd;
    &quot;repayment_mode&quot;: &quot;SI&quot;,&#xd;
    &quot;insurance_premium&quot;: 0.0,&#xd;
    &quot;tenure&quot;: {&#xd;
      &quot;units&quot;: &quot;MONTHS&quot;,&#xd;
      &quot;value&quot;: 6&#xd;
    }&#xd;
  },&#xd;
  &quot;kyc_attestation_type&quot;: &quot;E_KYC_DATA_RECEIVED_FROM_UIDAI&quot;,&#xd;
  &quot;marital_status&quot;: &quot;SINGLE&quot;,&#xd;
  &quot;current_residence&quot;: {&#xd;
    &quot;address&quot;: {&#xd;
      &quot;pincode&quot;: &quot;522612&quot;,&#xd;
      &quot;address_type&quot;: &quot;RESIDENTIAL&quot;,&#xd;
      &quot;city&quot;: &quot;Narasaraopet&quot;,&#xd;
      &quot;district&quot;: &quot;Guntur&quot;,&#xd;
      &quot;locality&quot;: &quot;Atmakur&quot;,&#xd;
      &quot;state&quot;: &quot;AP&quot;,&#xd;
      &quot;house_street&quot;: &quot;D O CHENNAKESAVARAO 1 103 A DURGI GUNTUR, GUNTUR, GUNT&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;partner_application_id&quot;: &quot;B11754B&quot;,&#xd;
  &quot;partner_customer_id&quot;: &quot;80CNTPJ5736Q&quot;,&#xd;
  &quot;customer_id&quot;: &quot;80CNTPJ5736Q&quot;,&#xd;
  &quot;customer&quot;: {&#xd;
    &quot;identities&quot;: [&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;AADHAAR&quot;,&#xd;
        &quot;id_value&quot;: &quot;2006&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id_type&quot;: &quot;PAN&quot;,&#xd;
        &quot;id_value&quot;: &quot;CNTPJ5736Q&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
    &quot;dob&quot;: &quot;2000-12-19&quot;,&#xd;
    &quot;name&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
      &quot;last_name&quot;: &quot;uxbnq&quot;,&#xd;
      &quot;first_name&quot;: &quot;dkxesh&quot;&#xd;
    },&#xd;
    &quot;phones&quot;: [&#xd;
      {&#xd;
        &quot;number&quot;: &quot;9852102459&quot;,&#xd;
        &quot;number_category&quot;: &quot;HOME&quot;,&#xd;
        &quot;number_type&quot;: &quot;MOBILE&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;parent_summary&quot;: {&#xd;
      &quot;mother&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mrs.&quot;,&#xd;
        &quot;last_name&quot;: &quot;AMAN&quot;,&#xd;
        &quot;first_name&quot;: &quot;RAMANA&quot;&#xd;
      },&#xd;
      &quot;father&quot;: {&#xd;
        &quot;prefix&quot;: &quot;Mr.&quot;,&#xd;
        &quot;last_name&quot;: &quot;KESAVA RAO&quot;,&#xd;
        &quot;first_name&quot;: &quot;CHENNA&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;poi&quot;: &quot;PAN&quot;,&#xd;
    &quot;email&quot;: &quot;qwertyuiop@gmail.com&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/po/uploadSanctionJSON?originatorId=${originatorId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang.RandomStringUtils;
vars.put(&quot;pan&quot;, RandomStringUtils.randomAlphabetic(3).toUpperCase() + &quot;P&quot; + RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(4) + RandomStringUtils.randomAlphabetic(1).toUpperCase());
vars.put(&quot;mobile&quot;, &quot;9&quot;+&quot;8&quot;+&quot;5&quot;+RandomStringUtils.randomNumeric(7));
vars.put(&quot;fName&quot;, RandomStringUtils.randomAlphabetic(3).toLowerCase() + &quot;esh&quot;);
vars.put(&quot;lName&quot;, RandomStringUtils.randomAlphabetic(5).toLowerCase());
vars.put(&quot;accNumber&quot;, &quot;1&quot;+RandomStringUtils.randomNumeric(13));
vars.put(&quot;appID&quot;, RandomStringUtils.randomAlphabetic(1).toUpperCase() + RandomStringUtils.randomNumeric(5) + RandomStringUtils.randomAlphabetic(1).toUpperCase());


now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustId Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot; :</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">Error</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">5</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import java.text.SimpleDateFormat

// Parse JSON response
def response = prev.getResponseDataAsString()
def jsonResponse = new JsonSlurper().parseText(response)

// Extract customerId and clientId
def customerId = jsonResponse.content.value.customerId
def clientId = jsonResponse.content.value.clientId

// Get the current timestamp
def currentTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date())

// Define the CSV file path
def filePath = &quot;C:/Users/C.SubhikshaS/Downloads/customer_data_smartcoin_${__time(yyyyMMdd-HHmm,)}.csv&quot;

// Create file if it does not exist and write header
def file = new File(filePath)
if (!file.exists()) {
    file.withWriter { writer -&gt;
        writer.writeLine(&quot;customerId,clientId,createdTime&quot;)
    }
}

// Append the extracted data to the CSV file
file.withWriterAppend { writer -&gt;
    writer.writeLine(&quot;$customerId,$clientId,$currentTime&quot;)
}
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sanction Status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/nimbus-services/api/po/status?originatorId=${originatorId}&amp;customerId=${customerId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="SanctionStatus" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">ERROR</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="SanctionReferenceId Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.sanctionReferenceId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- response" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="174130302">REJECTED</stringProp>
                <stringProp name="-809373649">Exception</stringProp>
                <stringProp name="2096857181">Failed</stringProp>
                <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
                <stringProp name="66247144">ERROR</stringProp>
                <stringProp name="-1873833668">MISSING VALUES</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disbursement Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;bank_branch&quot;: &quot;MUMBAI BOMBAY&quot;,&#xd;
  &quot;account_number&quot;: &quot;${accNumber}&quot;,&#xd;
  &quot;ac_holder_name&quot;: &quot;${fName}&quot;,&#xd;
  &quot;bank_ifsc&quot;: &quot;PUNB0121220&quot;,&#xd;
  &quot;documents&quot;: [&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;SIGNED_AGREEMENT&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;content_type&quot;: &quot;PDF&quot;,&#xd;
      &quot;links&quot;: [&#xd;
        &quot;http://10.91.20.29/download/selfie_5.jpg&quot;&#xd;
      ],&#xd;
      &quot;tag&quot;: &quot;LOAN_APPLICATION&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;bank_name&quot;: &quot;PNB&quot;,&#xd;
  &quot;customerId&quot;:${customerId},&#xd;
  &quot;ac_type&quot;: &quot;SAVINGS&quot;,&#xd;
  &quot;originatorId&quot;: &quot;U67110KA2015PTC084272&quot;,&#xd;
  &quot;annualPercentageRatio&quot;: 38.33&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/${service}/api/po/disbursement/request</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">now = new Date();

vars.put(&quot;todayDate&quot;, now.format(&apos;yyyy-MM-dd&apos;).toString());
vars.put(&quot;next30Date&quot;, (now +30).format(&apos;yyyy-MM-dd&apos;).toString());</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="disbursementReferenceId Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">disbursementReferenceId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">content.value.disbursementReferenceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">15</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disbursement Status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/${service}/api/po/disbursement/status?originatorId=${originatorId}&amp;disbursementReferenceId=${disbursementReferenceId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="174130302">REJECTED</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
              <stringProp name="2096857181">Failed</stringProp>
              <stringProp name="-1419836456">SYSTEM_ERROR</stringProp>
              <stringProp name="66247144">ERROR</stringProp>
              <stringProp name="-1873833668">MISSING VALUES</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree-Error" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report - all" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report - pass" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary  - fail" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Save Result - All" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">SMART COIN RESULT REPORT-${__time(yyyyMMdd-HHmm,)}.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Save Result - Error" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">SMART COIN ERROR RESULT REPORT-${__time(yyyyMMdd-HHmm,)}-Error.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
